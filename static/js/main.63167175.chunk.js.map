{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","isPending","robots","error","Card","id","name","email","className","src","alt","CardList","map","robot","key","Scroll","children","style","overflowY","border","height","SearchBox","onSearchChange","onChange","type","placeholder","ErrorBoundary","props","state","hasError","info","this","setState","Component","App","onRequestRobots","filteredRobots","filter","toLowerCase","includes","input","React","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","users","catch","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63167175.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((robot) => (\n        <Card\n          key={robot.id}\n          id={robot.id}\n          name={robot.name}\n          email={robot.email}\n        ></Card>\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst Scroll = ({ children }) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"5px solid black\",\n        height: \"500px\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, onSearchChange }) => {\n  return (\n    <div className=\"pa3\">\n      <input\n        onChange={onSearchChange}\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        name=\"searchField\"\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n  render() {\n    if (this.state.hasError) {\n      return <h1> Oooops. That is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\n\nimport { requestRobots, setSearchField } from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  searchField: state.searchRobots.searchField,\n  robots: state.requestRobots.robots,\n  isPending: state.requestRobots.isPending,\n  error: state.requestRobots.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n  onRequestRobots: () => dispatch(requestRobots()),\n});\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter((robots) => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? (\n      <h1>Loading...</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RobotFriends</h1>;\n        <SearchBox\n          input={searchField}\n          onSearchChange={onSearchChange}\n        ></SearchBox>\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots}></CardList>\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => response.json())\n    .then((users) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: users }))\n    .catch((error) =>\n      dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n    );\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}